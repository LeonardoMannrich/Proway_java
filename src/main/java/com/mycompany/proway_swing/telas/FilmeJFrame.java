/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proway_swing.telas;

import com.mycompany.proway_swing.bancoDados.Banco;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aluno
 */
    public class FilmeJFrame extends javax.swing.JFrame {
    
    private int idEscolhido = -1;

    /**
     * Creates new form FilmeJFrame
     */
    public FilmeJFrame() {
        initComponents();
        listarFilmes();
        popularComboBoxCategorias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelLista = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFilmes = new javax.swing.JTable();
        jButtonEditarLista = new javax.swing.JButton();
        jButtonApagarLista = new javax.swing.JButton();
        jLabelNome = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jButtomCadastrarNome = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelCategoria = new javax.swing.JLabel();
        jComboBoxCategoria = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelLista.setText("Lista de Filmes");

        jTableFilmes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Categorias", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableFilmes);
        if (jTableFilmes.getColumnModel().getColumnCount() > 0) {
            jTableFilmes.getColumnModel().getColumn(1).setResizable(false);
            jTableFilmes.getColumnModel().getColumn(2).setResizable(false);
        }

        jButtonEditarLista.setText("Editar");
        jButtonEditarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarListaActionPerformed(evt);
            }
        });

        jButtonApagarLista.setText("Apagar");
        jButtonApagarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApagarListaActionPerformed(evt);
            }
        });

        jLabelNome.setText("Nome");

        jButtomCadastrarNome.setText("Cadastrar");
        jButtomCadastrarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtomCadastrarNomeActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabelCategoria.setText("Categoria");

        jComboBoxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        jComboBoxCategoria.setSelectedIndex(-1);
        jComboBoxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelLista))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonEditarLista)
                            .addComponent(jButtonApagarLista))))
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                        .addComponent(jButtomCadastrarNome)
                        .addGap(9, 9, 9))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(jComboBoxCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelNome)
                                    .addComponent(jLabelCategoria))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLista)
                    .addComponent(jLabelCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonEditarLista)
                            .addComponent(jComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonApagarLista))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabelNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtomCadastrarNome))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtomCadastrarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtomCadastrarNomeActionPerformed
        try {
            var nome = jTextFieldNome.getText();
            var categoria = (String)jComboBoxCategoria.getSelectedItem();
            var parts = categoria.split(" _ ");
            var idCategoria = Integer.parseInt(parts[0]);

           var conexao = Banco.conectar();

            String query;
            if (idEscolhido == -1){
            query = "INSERT INTO filmes (id_categoria, nome) VALUES (?,?)";
            var prepareStatement = conexao.prepareStatement(query);
            prepareStatement.setInt(1, idCategoria);
            prepareStatement.setString(2, nome);
            prepareStatement.execute();
            }else{
                query = "UPDATE filmes SET id_categoria = ?, nome = ? WHERE id = ?";
                var prepareStatement = conexao.prepareStatement(query);
                prepareStatement.setInt(1, idCategoria);
                prepareStatement.setString(2, nome);
                prepareStatement.setInt(3, idEscolhido);
                prepareStatement.execute();
                idEscolhido = -1; // Retornar para o modo de cadatro
            }

            listarFilmes();

            JOptionPane.showMessageDialog(null, nome);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtomCadastrarNomeActionPerformed

    private void jButtonApagarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApagarListaActionPerformed
            try {
            var conexao = Banco.conectar();
            var indiceLinhaSelecionada = jTableFilmes.getSelectedRow();
            var idEscolhidoParaApagar = Integer.parseInt(jTableFilmes
           .getValueAt(indiceLinhaSelecionada, 0).toString());
            var query = "DELETE FROM filmes WHERE id = ?";
            var preparestatement = conexao.prepareCall(query);
            preparestatement.setInt(1, idEscolhidoParaApagar);
            preparestatement.execute();
            
            listarFilmes();

            JOptionPane.showMessageDialog(null, ("Filme apagado com sucesso"));
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonApagarListaActionPerformed

    private void jButtonEditarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarListaActionPerformed
    var indiceLinhaSelecionada = jTableFilmes.getSelectedRow();
    idEscolhido = Integer.parseInt(jTableFilmes
            .getValueAt(indiceLinhaSelecionada, 0).toString());
    
    try{
        var conexao = Banco.conectar();
            var query = "select"
                    + " filmes.id,"
                    + " filmes.id_categoria,"
                    + " filmes.nome"
                    + "  from filmes WHERE id = " + idEscolhido;
            var statement = conexao.createStatement();
            var dados = statement.executeQuery(query); //Tipo resultset
            var categoriaNome = jTableFilmes.getValueAt(indiceLinhaSelecionada, 1). toString();
            if(dados.next()){
                var nome = dados.getString("nome");
                var idCategoria = dados.getInt("id_categoria");
                jTextFieldNome.setText(nome);
                
                var mensagem = idCategoria + " - " + categoriaNome;
                for (int i = 0; i < jComboBoxCategoria.getItemCount(); i++) {
                    var item = (String)jComboBoxCategoria.getItemAt(i);
                    if(mensagem.equals(item)){
                        jComboBoxCategoria.setSelectedItem(item);
                    }
                }
            }
    
    }catch(SQLException e) {
        e.printStackTrace();
    }
    
    
    /**
    * ExercÃ­cio: Criar uma tabela chamada categorias com as seguintes colunas
    * id: gerada automÃ¡ticamente, chave primÃ¡ria
    * nome: texto obrigatÃ³rio
    * Criar um sistema (CRUD) assim como o FilmeJFFrame
    */
// TODO add your handling code here:
    }//GEN-LAST:event_jButtonEditarListaActionPerformed

    private void jComboBoxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCategoriaActionPerformed

    private void listarFilmes() {
        try {
            var conexao = Banco.conectar();
            var query = "select filmes.id, categorias.nome as 'categoria', filmes.nome  from filmes\n" +
"inner join categorias on (filmes.id_categoria = categorias.id);";
            var statement = conexao.createStatement();
            var dados = statement.executeQuery(query); //Tipo resultset
            var modeloTabela = (DefaultTableModel) jTableFilmes.getModel();
            // remover todos os elementos do jTable
            modeloTabela.setRowCount (0);
            while (dados.next()) {
                var id = Integer.parseInt(dados.getString("id"));
                var nome = dados.getString("nome");
                var categoriaNome = dados.getString("categoria");
                modeloTabela.addRow(new Object[]{
                    id, categoriaNome, nome
                });
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void popularComboBoxCategorias(){
        try{
            var conexao = Banco.conectar();
            var query = "SELECT id, nome FROM categorias";
            var statement = conexao.createStatement();
            var dados = statement.executeQuery(query);
            while(dados.next()){
                var categoriaNome = dados.getString("nome");
                var categoriaId = dados.getInt("id");
                jComboBoxCategoria.addItem(categoriaId + " - " + categoriaNome);
            }
            
        } catch (SQLException e){
         e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FilmeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FilmeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FilmeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FilmeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FilmeJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtomCadastrarNome;
    private javax.swing.JButton jButtonApagarLista;
    private javax.swing.JButton jButtonEditarLista;
    private javax.swing.JComboBox<String> jComboBoxCategoria;
    private javax.swing.JLabel jLabelCategoria;
    private javax.swing.JLabel jLabelLista;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableFilmes;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables
}
